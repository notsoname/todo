{"version":3,"sources":["components/addList/index.js","components/addList/addList.js","components/appHeader/index.js","components/appHeader/appHeader.js","components/searchPanel/index.js","components/searchPanel/searchPanel.js","components/toDoListItem/index.js","components/toDoListItem/toDoListItem.js","components/toDoList/index.js","components/toDoList/toDoList.js","components/toDoListFilter/index.js","components/toDoListFilter/toDoListFilter.js","components/app/app.js","index.js"],"names":["AddList","state","text","onValueChange","bind","onSubmit","e","this","setState","target","value","preventDefault","props","onItemAdded","className","placeholder","type","onChange","Component","AppHeader","toDos","done","SearchPanel","term","onUpdateSearch","ToDoListItem","important","label","onToggleImportant","onDelete","onToggleDone","classNames","classNames2","onClick","ToDoList","elem","map","item","id","itemProps","ToDoListFilter","buttons","name","filter","onFilterSelect","clazz","App","toDoData","addItem","maxId","index","findIndex","el","oldItem","newItem","slice","items","length","toLowerCase","indexOf","doneCount","toDoCount","visibleItems","search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e89016eb.chunk.js","sourcesContent":["import AddList from './addList';\r\nexport default AddList;","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport './addList.scss'\r\n\r\nclass AddList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n        \r\n    } \r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <form onSubmit={this.onSubmit} className='addList d-flex align-items-end'>\r\n                <input\r\n                placeholder='Add some items, please' \r\n                className='form-control'\r\n                type='text'\r\n                onChange={this.onValueChange}/>\r\n                <button   className='btnSearch btn btn-success' value={this.state.text}>Add </button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddList;","import AppHeader from './appHeader';\r\nexport default AppHeader;","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport './appHeader.scss';\r\n\r\nclass AppHeader extends Component {\r\n    \r\n    render() {\r\n        return ( \r\n            <div className='appHeader d-flex justify-content-between align-items-end'>\r\n                <h1 className='appHeader__name'>Todo list</h1>\r\n                <h2>{this.props.toDos} more to do, {this.props.done} done</h2>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './searchPanel.js';\r\nexport default SearchPanel;","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport './searchPanel.scss'\r\n\r\nclass SearchPanel extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this)\r\n    }\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className='d-flex align-items-end'>\r\n                <input\r\n                placeholder='What are you looking for?' \r\n                className='form-control'\r\n                type='text'\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}/>\r\n                <button \r\n\r\n                className='btnSearch btn btn-success'>Search </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchPanel;","import ToDoListItem from './toDoListItem';\r\nexport default ToDoListItem;","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport './toDoListItem.scss'\r\n\r\nconst ToDoListItem = ({done, important, label, onToggleImportant, onDelete, onToggleDone}) => {\r\n\r\n    let classNames = 'fa fa-star'\r\n    let classNames2 = 'fa fa-check-circle'\r\n    if (done) {\r\n        classNames2 += ' done'\r\n    }\r\n    if (important) {\r\n        classNames += ' important'\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='toDoListItem__block d-flex justify-content-between align-items-end'>\r\n                <span className='toDoListItem'>{label}</span>\r\n                <div>\r\n                    <button onClick={onDelete} className='btn btn-trash btn-info '>\r\n                        <i className= 'fa fa-trash' />\r\n                    </button>\r\n                    <button onClick={onToggleImportant} className='btn btn-imp btn-info '>\r\n                        <i className= {classNames} />\r\n                    </button>\r\n                    <button onClick={onToggleDone} className='btn btn-imp btn-info '>\r\n                        <i className= {classNames2} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ToDoListItem;","import ToDoList from './toDoList';\r\nexport default ToDoList;","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport ToDoListItem from '../toDoListItem';\r\n\r\nconst ToDoList = ({toDos, onToggleImportant, onDelete, onToggleDone}) => {\r\n    const elem = toDos.map((item) => {\r\n        const {id, ...itemProps} = item\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <ToDoListItem \r\n                {...itemProps}\r\n                onToggleImportant={() => onToggleImportant(id)}\r\n                onDelete={() => onDelete(id)}\r\n                onToggleDone={() => onToggleDone(id)}/>\r\n            </li>\r\n\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elem}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nexport default ToDoList;\r\n","import ToDoListFilter from './toDoListFilter';\r\nexport default ToDoListFilter;","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport './toDoListFilter.scss';\r\n\r\nclass ToDoListFilter extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'All'},\r\n            {name: 'active', label: 'Active'},\r\n            {name: 'done', label: 'Done'}\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const {filter, onFilterSelect} = this.props;\r\n        const buttons = this.buttons.map(({name,label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n              <button \r\n              type=\"button\"\r\n              className={`btn + btn-filter ${clazz}`}\r\n              key= {name}\r\n              onClick={() => onFilterSelect(name)}>{label}</button>\r\n            )\r\n          })\r\n\r\n        return (\r\n            <div className='toDoListFilter d-flex'>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ToDoListFilter;","import React, { Component } from 'react';\r\nimport AddList from '../addList';\r\nimport AppHeader from '../appHeader';\r\nimport SearchPanel from '../searchPanel';\r\nimport ToDoList from '../toDoList';\r\nimport ToDoListFilter from '../toDoListFilter';\r\nimport './app.scss'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            toDoData: [\r\n                {label: 'Eat food', id: 1, important: false, done: false},\r\n                {label: 'Drink beer', id: 2, important: false, done: false}\r\n            ],\r\n            filter: \"all\",\r\n            term: ''\r\n        }\r\n        this.onToggleImportant = this.onToggleImportant.bind(this)\r\n        this.onDelete = this.onDelete.bind(this)\r\n        this.onToggleDone = this.onToggleDone.bind(this)\r\n        this.addItem = this.addItem.bind(this)\r\n        this.onFilterSelect = this.onFilterSelect.bind(this)\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this)\r\n        this.maxId = 4\r\n    }\r\n\r\n    onToggleImportant(id){\r\n        this.setState(({toDoData}) => {\r\n                const index = toDoData.findIndex((el) => el.id === id)\r\n                const oldItem = toDoData[index]\r\n                const newItem = {...oldItem, important: !oldItem.important}\r\n\r\n                const newArr = [\r\n                    ...toDoData.slice(0, index),\r\n                    newItem,\r\n                    ...toDoData.slice(index+1)\r\n                ]\r\n                return {\r\n                    toDoData: newArr\r\n                }\r\n        })\r\n    }\r\n\r\n    onToggleDone(id) {\r\n        this.setState(({toDoData}) => {\r\n            const index = toDoData.findIndex((el) => el.id === id)\r\n            const oldItem = toDoData[index]\r\n            const newItem = {...oldItem, done: !oldItem.done}\r\n            \r\n            const newArr = [\r\n                ...toDoData.slice(0,index),\r\n                newItem,\r\n                ...toDoData.slice(index + 1)\r\n            ]\r\n            return {\r\n                toDoData: newArr\r\n            }\r\n        })\r\n    }\r\n    onDelete(id) {\r\n        this.setState(({toDoData}) => {\r\n            const index = toDoData.findIndex((el) => el.id === id)\r\n            const newArr = [\r\n                ...toDoData.slice(0, index),\r\n                ...toDoData.slice(index+1)\r\n            ]\r\n            return {\r\n                toDoData: newArr\r\n            }\r\n        })\r\n    }\r\n    addItem(text) {\r\n       const newItem = {\r\n           label: text,\r\n           id: this.maxId++,\r\n           important: false,\r\n           done: false\r\n       }\r\n        this.setState(({toDoData}) => {\r\n            const newArr = [...toDoData,newItem]\r\n            return {\r\n                toDoData: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        })\r\n    }\r\n    onUpdateSearch(term) {\r\n        this.setState({\r\n            term\r\n        })\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items\r\n            case 'done':\r\n                return items.filter((item) => item.done)\r\n            case 'active': \r\n                return items.filter((item) => !item.done)\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n    onFilterSelect(filter) {\r\n        this.setState({filter})\r\n    }\r\n\r\n    \r\n    render() {\r\n        const {toDoData, term, filter} = this.state\r\n        const doneCount = toDoData.filter((el) => el.done).length\r\n        const toDoCount = toDoData.length - doneCount\r\n        const visibleItems = this.filter(this.search(toDoData, term), filter)\r\n        return (\r\n            <div className='app'>\r\n                <SearchPanel onUpdateSearch={this.onUpdateSearch}/>\r\n                <ToDoListFilter filter= {this.state.filter}\r\n                onFilterSelect={this.onFilterSelect}/>\r\n                <AppHeader toDos={toDoCount} done={doneCount}/>\r\n                <ToDoList toDos={visibleItems}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onDelete={this.onDelete}\r\n                onToggleDone={this.onToggleDone}/>\r\n                <AddList onItemAdded={this.addItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}